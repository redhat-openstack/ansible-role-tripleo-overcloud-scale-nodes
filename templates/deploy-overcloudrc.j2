# TODO: 1. Port variables to artosn namespace
# TODO: 2. Determine what should be 'default'
    # Used within the bash script
    # - hw_env.libvirt_type
    # - installer.deploy.command
    # - distro.config.ntp_server_ip
    # - installer.network.variant
    # - hw_env.neutron_public_interface
    # - hw_env.deploy_timeout
    #
    # Used in conditionals
    # - installer.network.variant
    # - installer.env.type
    # - installer.network.isolation
    # - installer.network.protocol
    # - installer.ssl
    # - installer.deploy.type
    # - product.build
    # - installer.custom_deploy.type
    # - product.full_version
# TODO: 3. Prune any unneeded features/variables 

#!/bin/bash
export OVERCLOUD_LIBVIRT_TYPE={{ hw_env.libvirt_type }}
export DEPLOY_COMMAND="openstack overcloud deploy --debug \
                                                  --log-file overcloud_deployment_{{ 100 | random }}.log \
                                                  {{ installer.deploy.command }} \
                                                  --libvirt-type=$OVERCLOUD_LIBVIRT_TYPE \
                                                  --ntp-server {{ distro.config.ntp_server_ip }} \
                                                  --control-scale $CONTROLSCALE \
                                                  --compute-scale $COMPUTESCALE \
                                                  --ceph-storage-scale $CEPHSTORAGESCALE \
                                                  --block-storage-scale $BLOCKSTORAGESCALE \
                                                  --swift-storage-scale $SWIFTSTORAGESCALE \
                                                  --control-flavor $CONTROLFLAVOR \
                                                  --compute-flavor $COMPUTEFLAVOR \
                                                  --ceph-storage-flavor $CEPHSTORAGEFLAVOR \
                                                  --block-storage-flavor $BLOCKSTORAGEFLAVOR \
                                                  --swift-storage-flavor $SWIFTSTORAGEFLAVOR"

{% if installer.network.variant == 'vlan' %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND --neutron-network-type vlan \
                                       --neutron-disable-tunneling"
{% else %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND --neutron-network-type {{ installer.network.variant }} \
                                       --neutron-tunnel-types {{ installer.network.variant }}"
{% endif %}

{% if installer.env.type != "virthost" %}
export NEUTRON_PUBLIC_INTERFACE={{ hw_env.neutron_public_interface }}
export DEPLOY_COMMAND="$DEPLOY_COMMAND --neutron-public-interface=$NEUTRON_PUBLIC_INTERFACE "
{% endif %}

export DEPLOY_TIMEOUT={{ hw_env.deploy_timeout | default('90') }}
export DEPLOY_COMMAND="$DEPLOY_COMMAND --timeout=$DEPLOY_TIMEOUT "

{% if installer.network.isolation != 'none' and installer.network.protocol == "ipv4" %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/network-isolation.yaml"
{% endif %}

{% if installer.network.isolation != 'none' and installer.network.protocol == "ipv6" %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/network-isolation-v6.yaml"
{% endif %}

{% if installer.network.isolation == "single_nic_vlans" and installer.network.protocol == "ipv4" %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/net-single-nic-with-vlans.yaml"
{% endif %}

{% if installer.network.isolation == "single_nic_vlans_ipv6" and installer.network.protocol == "ipv6" %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/net-single-nic-with-vlans-v6.yaml"
{% endif %}

{% if installer.network.isolation != 'none' %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e ~/network-environment.yaml"
{% endif %}

{% if installer.network.isolation != 'none' and installer.deploy.type == 'plan' %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e ~/plan-parameter-neutron-bridge.yaml "
{% endif %}

{% if installer.ssl == True %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e ~/enable-tls.yaml \
                                       -e ~/inject-trust-anchor.yaml "
{% endif %}

{% if installer.deploy.type == 'templates' and product.build is defined and product.build != 'ga' %}
if [ "$CEPHSTORAGESCALE" -gt "0" ]; then
  export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/storage-environment.yaml"
fi
{% endif %}

{% if installer.custom_deploy.type != 'none' and installer.custom_deploy.type == 'openstack_virtual_baremetal' %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e ~/openstack-virtual-baremetal/templates/kilo/overcloud-env/ovb.yaml "
{% endif %}

{% if product.full_version != '7-director' %}
export DEPLOY_COMMAND="$DEPLOY_COMMAND -e {{ artosn_working_dir }}/local_tht/environments/puppet-pacemaker.yaml"
{% endif %}

export DEPLOY_COMMAND="$DEPLOY_COMMAND -e ~/default-overcloud-settings.yaml"